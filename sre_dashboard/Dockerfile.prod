###########
# BUILDER #
###########

# pull official base image
FROM python:3.10.0 as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get install python3-dev gcc musl-dev -y

# lint
RUN pip install --no-cache-dir --upgrade pip
COPY . /usr/src/app/

# install dependencies
COPY ./requirements.txt .
RUN mkdir /usr/src/app/wheels
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.10.0

# create directory base image
# RUN mkdir -p /home/app

# create the app user
# RUN addgroup app && adduser -S app --system app
RUN addgroup --group app
RUN adduser --ingroup app --home /home/app app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/logs
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install tzdata -y
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chmod scripts
RUN chmod 511 $APP_HOME/entrypoint.prod.sh

# chmod staticfiles directory
RUN chmod 755 $APP_HOME/staticfiles

# read and exeute permissions for nginx to read static files
RUN chmod -R 755 $APP_HOME/staticfiles

# chown all files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
